@using E_Commerce.ViewModels
@using Microsoft.AspNetCore.Identity
@* @model IEnumerable<E_Commerce.Models.Product> *@
@* @model E_Commerce.Helper.PaginatedList<E_Commerce.Models.Product> *@
@model ProductFilterViewModel


@{
    ViewData["Title"] = "Products";
}

<h2 class="text-center mb-4">Product List</h2>


@if (User.IsInRole("Admin") || User.IsInRole("Seller"))
{
    <div class="text-end mb-3">
        <a asp-action="Create" class="btn btn-primary">+ Add Product</a>
    </div>
}

<form method="get" class="row mb-4">
    <div class="col-md-3">
        <input type="text" name="searchQuery" value="@Model.SearchQuery" class="form-control" placeholder="Search by name" />
    </div>
    <div class="col-md-2">
        <select name="categoryId" class="form-select">
            <option value="">All Categories</option>
            @foreach (var cat in Model.Categories)
            {
                <option value="@cat.Id" selected="@(cat.Id == Model.CategoryId ? "selected" : null)">
                    @cat.Name
                </option>
            }
        </select>
    </div>
    <div class="col-md-2">
        <input type="number" step="0.01" name="minPrice" value="@Model.MinPrice" class="form-control" placeholder="Min Price" />
    </div>
    <div class="col-md-2">
        <input type="number" step="0.01" name="maxPrice" value="@Model.MaxPrice" class="form-control" placeholder="Max Price" />
    </div>
    @* <div class="col-md-2">
        <select name="minRating" class="form-select">
            <option value="">Rating</option>
            @for (int i = 1; i <= 5; i++)
            {
                <option value="@i" @(i == Model.MinRating ? "selected" : "")>@i+ ★ & up</option>
            }
        </select>
    </div> *@
    <div class="col-md-1">
        <button type="submit" class="btn btn-primary w-100">Filter</button>
    </div>
</form>

<div class="container">
    <div class="row">
        @foreach (var product in Model.Products)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow-sm">
                    <img src="@Url.Content(product.ProductMedias.FirstOrDefault()?.ImagePath)"
                         class="card-img-top" alt="Product Image" style="height: 200px; object-fit: cover;" />
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Description</p>
                        <p class="card-text"><strong>Price:</strong> ₹@product.Price</p>
                    </div>

                    <div class="card-footer d-flex justify-content-between">
                        <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-info btn-sm">View</a>
                        @if (User.IsInRole("Admin") || User.IsInRole("Seller"))
                        {
                            <a asp-action="Edit" asp-route-id="@product.Id" class="btn btn-warning btn-sm">Edit</a>
                            <a asp-action="Delete" asp-route-id="@product.Id" class="btn btn-danger btn-sm"
                               onclick="return confirm('Are you sure you want to delete this product?');">Delete</a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<nav>
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@(Model.CurrentPage - 1)"
                   asp-route-categoryId="@Model.CategoryId">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled"><span class="page-link">Previous</span></li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.CurrentPage)
            {
                <li class="page-item active"><span class="page-link">@i</span></li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@i"
                       asp-route-categoryId="@Model.CategoryId">@i</a>
                </li>
            }
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@(Model.CurrentPage + 1)"
                   asp-route-categoryId="@Model.CategoryId">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled"><span class="page-link">Next</span></li>
        }
    </ul>
</nav>
